schema {
  query: QueryRoot
  mutation: MutationRoot
}

type MutationRoot {
  login: User
}

# ISO 8601 combined date and time without timezone.
#
# # Examples
#
# * `2015-07-01T08:59:60.123`,
scalar NaiveDateTime
scalar Upload

type QueryRoot {
  getUserLsps(user_id: String!): [UserLspMap]
  allCatMain(lsp_ids: [String], searchText: String): [CatMain]
  allSubCatMain(lsp_ids: [String], searchText: String): [SubCatMain]
  allSubCatByCatId(catId: String): [SubCatMain]
  getUserOrganizations(user_id: String!): [UserOrganizationMap]
  getUserOrgDetails(user_id: String!, user_lsp_id: String!): UserOrganizationMap
  latestCourses(
    publish_time: Int
    pageCursor: String
    Direction: String
    pageSize: Int
    status: Status
    filters: CoursesFilters
  ): PaginatedCourse
}

type User {
  id: ID
  first_name: String!
  last_name: String!
  status: String!
  role: String!
  is_verified: Boolean!
  is_active: Boolean!
  gender: String!
  created_by: String
  updated_by: String
  created_at: String!
  updated_at: String!
  email: String!
  phone: String!
  photo_url: String
}

type UserLspMap {
  user_lsp_id: ID
  user_id: String!
  lsp_id: String!
  status: String!
  created_by: String
  updated_by: String
  created_at: String!
  updated_at: String!
}

type UserOrganizationMap {
  user_organization_id: ID
  user_id: String!
  user_lsp_id: String!
  organization_id: String!
  organization_role: String!
  is_active: Boolean!
  employee_id: String!
  created_by: String
  updated_by: String
  created_at: String!
  updated_at: String!
}

type CatMain {
  id: ID
  Name: String
  Description: String
  ImageUrl: String
  Code: String
  CreatedAt: String
  UpdatedAt: String
  CreatedBy: String
  UpdatedBy: String
  IsActive: Boolean
}

type SubCatMain {
  id: ID
  Name: String
  Description: String
  ImageUrl: String
  Code: String
  CatId: String
  CreatedAt: String
  UpdatedAt: String
  CreatedBy: String
  UpdatedBy: String
  IsActive: Boolean
}

type Course {
  id: ID
  name: String
  lspId: String
  publisher: String
  description: String
  summary: String
  instructor: String
  image: String
  previewVideo: String
  tileImage: String
  owner: String
  duration: Int
  expertise_level: String
  language: [String]
  benefits: [String]
  outcomes: [String]
  created_at: String
  updated_at: String
  type: String
  prequisites: [String]
  goodFor: [String]
  mustFor: [String]
  related_skills: [String]
  publish_date: String
  expiry_date: String
  expected_completion: String
  qa_required: Boolean
  approvers: [String]
  created_by: String
  updated_by: String
  status: Status
  is_display: Boolean
  category: String
  sub_category: String
  sub_categories: [sub_categories]
  is_active: Boolean
}

type PaginatedCourse {
  courses: [Course]
  pageCursor: String
  direction: String
  pageSize: Int
}

#course types and enum
enum Status {
  SAVED
  APPROVAL_PENDING
  ON_HOLD
  APPROVED
  PUBLISHED
  REJECTED
}

type sub_categories {
  name: String
  rank: Int
}

input CoursesFilters {
  LspId: String
  Category: String
  SubCategory: String
  Language: String
  DurationMin: Int
  DurationMax: Int
  Type: String
  SearchText: String
}
