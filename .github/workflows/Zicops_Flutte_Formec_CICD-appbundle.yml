name: Zicops Flutter CI-CD<>Formec App Bundle

on:
 workflow_dispatch:
  #push:
   # branches:
    #  - main
  #pull_request:
   # branches:
    #  - main


env:
  flutter-channel: "stable"

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  flutter_test:
    name: Run flutter test
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
      - run: flutter clean
      - run: flutter pub get
      - name: Generate files
        run: flutter pub run build_runner build --delete-conflicting-outputs
      #- run: flutter analyze
      - run: flutter test
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
      - run: flutter clean
      - run: flutter pub get
      - name: Generate files
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-ios-${{ hashFiles('**/pubspec.lock') }}
      - run: flutter build apk --release --split-per-abi
      - run: flutter build appbundle
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
         artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
         token: ${{ secrets.GH_TOKEN }}
         tag: ${{ steps.version.outputs.content }}
         commit: ${{ github.sha }}
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab  



# TODO following is an example of how we will release our bundles to the stores
  # release_apps:
  #   name: Release Zicops Flutter Bundles
  #   needs: [build_appbundle, build_ios]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: "beta"
  #     - name: Cache pub packages
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.pub-cache
  #         key: ${{ runner.os }}-flutter-release-apps
  #     - run: flutter pub get
  #     - run: flutter clean
  #     - name: Download Android bundle
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build_appbundle
  #         path: build/app/outputs/bundle/
  #     - name: Download iOS bundle
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build_ios
  #         path: build/ios/
  #     # - name: Release Android bundle
  #     #   uses: r0adkll/upload-google-play@v2
  #     #   with:
  #     #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
  #     #     packageName: com.zicops.formec
  #     #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
  #     #     track: internal
  #     #     userFraction: 0.1
  #     #     whatsnewsDir: whatsnews
  #     # - name: Release iOS bundle
  #     #   uses: r0adkll/upload-google-play@v2
  #     #   with:
  #     #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
  #     #     packageName: com.zicops.formec
  #     #     releaseFiles: build/ios/iphoneos/Runner.app
  #     #     track: internal
  #     #     userFraction: 0.1
  #     #     whatsnewsDir: whatsnews
